// This file was auto-generated by ML.NET Model Builder.
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace WinFormsApp1
{
    public partial class MLModel1
    {
        /// <summary>
        /// model input class for MLModel1.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [ColumnName(@"heatpump")]
            public string Heatpump { get; set; }

            [ColumnName(@"electric_cooking")]
            public bool Electric_cooking { get; set; }

            [ColumnName(@"gas_cooking")]
            public bool Gas_cooking { get; set; }

            [ColumnName(@"bottled_gas_cooking")]
            public bool Bottled_gas_cooking { get; set; }

            [ColumnName(@"electric_water_heating")]
            public bool Electric_water_heating { get; set; }

            [ColumnName(@"gas_water_heating")]
            public bool Gas_water_heating { get; set; }

            [ColumnName(@"wood_water_heating")]
            public bool Wood_water_heating { get; set; }

            [ColumnName(@"electric_heating")]
            public bool Electric_heating { get; set; }

            [ColumnName(@"gas_heating")]
            public bool Gas_heating { get; set; }

            [ColumnName(@"wood_heating")]
            public bool Wood_heating { get; set; }

            [ColumnName(@"fossil_fuels_heating")]
            public bool Fossil_fuels_heating { get; set; }

            [ColumnName(@"adults")]
            public float Adults { get; set; }

            [ColumnName(@"children")]
            public float Children { get; set; }

            [ColumnName(@"income")]
            public string Income { get; set; }

            [ColumnName(@"location")]
            public string Location { get; set; }

            [ColumnName(@"datetime")]
            public float Datetime { get; set; }

            [ColumnName(@"consumpiton_data")]
            public float Consumpiton_data { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for MLModel1.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName(@"heatpump")]
            public float[] Heatpump { get; set; }

            [ColumnName(@"electric_cooking")]
            public float[] Electric_cooking { get; set; }

            [ColumnName(@"gas_cooking")]
            public float[] Gas_cooking { get; set; }

            [ColumnName(@"bottled_gas_cooking")]
            public float[] Bottled_gas_cooking { get; set; }

            [ColumnName(@"electric_water_heating")]
            public float[] Electric_water_heating { get; set; }

            [ColumnName(@"gas_water_heating")]
            public float[] Gas_water_heating { get; set; }

            [ColumnName(@"wood_water_heating")]
            public float[] Wood_water_heating { get; set; }

            [ColumnName(@"electric_heating")]
            public float[] Electric_heating { get; set; }

            [ColumnName(@"gas_heating")]
            public float[] Gas_heating { get; set; }

            [ColumnName(@"wood_heating")]
            public float[] Wood_heating { get; set; }

            [ColumnName(@"fossil_fuels_heating")]
            public float[] Fossil_fuels_heating { get; set; }

            [ColumnName(@"adults")]
            public float Adults { get; set; }

            [ColumnName(@"children")]
            public float Children { get; set; }

            [ColumnName(@"income")]
            public string Income { get; set; }

            [ColumnName(@"location")]
            public string Location { get; set; }

            [ColumnName(@"datetime")]
            public float Datetime { get; set; }

            [ColumnName(@"consumpiton_data")]
            public float Consumpiton_data { get; set; }

            [ColumnName(@"Features")]
            public float[] Features { get; set; }

            [ColumnName(@"Score")]
            public float Score { get; set; }

        }

        #endregion

        private static string MLNetModelPath = Path.GetFullPath("MLModel1.zip");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }
    }
}
